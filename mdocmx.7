'\" -- preprocess: mdocmx(1)
.\"@ mdocmx.7 - mdocmx(7) reference manual.
.\"@ mdocmx(7) extends the mdoc(7) semantic markup language by references,
.\"@ allowing it to create anchors and table of contents.
.\"
.\" Written 2014 - 2022 Steffen Nurpmeso <steffen@sdaoden.eu>.
.\" Public Domain
.
.Dd Nov 23, 2022
.Dt MDOCMX 7
.Os
.Mx -enable
.
.
.Sh NAME
.Nm .Mx
.Nd reference extension for the mdoc manual language
.
.
.eo
.de mx-xr-url-create
. ie 'pdf'\*[.T]' \{\
.  ie 'mdocmx'\$3' \
.   pdfhref W -D "https://www.sdaoden.eu/code-mdocmx-\$2.html" -P "\%" -A "\c" "[\$1]"
.  el \
.   pdfhref W -D "https://man.archlinux.org/man/\$3.\$2" -P "\%" -A "\c" "[\$1]"
. \}
. el \{\
.  ie 'mdocmx'\$3' \
.   URL "https://www.sdaoden.eu/code-mdocmx-\$2.html" "[\$1]"
.  el \
.   URL "https://man.archlinux.org/man/\$3.\$2" "[\$1]"
. \}
..
.ec
.
.
.Sh SYNOPSIS
.
.Nm
.Fl enable
.Op Ar output-formats
.
.Pp
.Nm
.Fl disable
.
.Pp
.Nm
.Nm
.Ar macro
.Nm
.Ar macro Ar key
.
.Pp
.Bk
.Nm
.Fl ix
.Op Ar category
.Ar key
.Ek
.Bk
.Nm
.Fl sx
.Op Ar category
.Ek
.
.Pp
.Bk
.Nm
.Fl toc
.Op Ar output-formats
.Op Fl tree Ar output-formats
.Ek
.
.
.Mx -toc -tree html xhtml pdf ps
.
.
.Sh DESCRIPTION
.
.Xr mdocmx 7
extends the
.Xr mdoc 7
.Ux
manual page markup language with references, allowing it to create
anchors and table of contents (and potentially an index).
The resulting documents are valid, compatible and distributable, and
will become fully interactive if the local formatter is
.Xr mdocmx 7
aware.
A new multiplexer command achieves this:
.Nm .
.
.Pp
Because single-pass
.Xr troff 1
implementations cannot create forward references documents which use
this extension need to be preprocessed with the
.Xr mdocmx 1
preprocessor, implemented in portable
.Xr sh 1
and
.Xr awk 1 .
The mentioned properties also apply to preprocessed manuals.
For more please see
.Sx COMPATIBILITY .
.
.Pp
The
.Xr mdocmx 7
reference extension augments the standard
.Xr mdoc 7
document prologue \(en
.Ic \&.Dd ,
.Ic \&.Dt
and
.Ic \&.Os
\(en with
.Ql Nm Fl enable .
The extension can be restricted to specific output formats by specifying
the desired ones as further arguments;
for convenience all typewriter-like devices can be addressed with
.Ql Ar tty .
It is not an error to specify a device for which no special
.Xr mdocmx 7
support is available, such requests are silently ignored.
.
.Ss Creating referenceable anchors
.
When
.Ql Fl enable Ns
d in the document prologue the third group of
.Nm
usage forms enqueue index anchor requests.
These form a last\(enin \(em first\(enout stack that is consumed
(popped) by later occurrences of (corresponding)
.Xr mdoc 7
.Ar macro Ns
s which support referenceable index entries.
Each supported
.Ar macro
has its own namespace, meaning that, for example,
.Ql Ic .Mx Ns \0\&Ic sendmail
and
.Ql Ic .Mx Ns \0\&Va sendmail
will create distinct index anchors.
.
.Pp
Using the plain macro
.Nm
without arguments creates a stack entry for which both,
the name of the
.Ar macro
as well as the
.Ar key
are taken from the document content (as soon as possible).
.Ql Nm Ar macro
creates a stack entry that is consumed by the next occurrence of
.Ar macro ,
then taking the
.Ar key
off the document content, whereas
.Ql Nm Ar macro Ar key
creates an exact stack entry with also
.Ar key
defined, it is popped by the exact macro / key match only.
.
.Pp
Referenceable anchors for the
.Xr mdoc 7
section header commands
.Ic .Sh
and
.Ic .Ss
are created automatically, but, again, with
.Xr mdocmx 7
any
.Ic .Sx
referencing them will become interactive.
External cross-references defined via
.Ic .Xr
will also be backed with functionality; dependent upon the output format
this requires setting
.Dv mx-xr-url ,
however.
The following macros gain support for referenceable anchors via
.Nm :
.
.Pp
.Bl -tag -compact -width ".It Ic ._B"
.Mx
.It Ic .Ar
Command argument.
.Mx
.It Ic .Cd
Configuration declaration.
.Mx
.It Ic .Cm
Command modifier.
.Mx
.It Ic .Dv
Defined variable or preprocessor constant.
.Mx
.It Ic .Er
Error constant.
.Mx
.It Ic .Ev
Environment variable.
.Mx
.It Ic .Fl
Command line option (flag).
.Mx
.It Ic .Fn
Function name.
.Mx
.It Ic .Fo
Function name (in function block syntax).
This is mapped to
.Ic .Fn ,
.Ic \&\&.Fo
has no index by itself.
.Mx
.It Ic .Ic
Internal or interactive command.
.Mx
.It Ic .In
An
.Ql include
file for, e.g., the C programming language.
.Mx
.It Ic .Pa
File system path.
.Mx
.It Ic .Va
Variable name.
.Mx
.It Ic .Vt
Variable type, type reference.
.El
.
.Ss "String cleanup and reference prevention"
.
Before strings get used for anchor creation or reference lookup any
surrounding whitespace will be removed, as well as any preceding
.Ql \e& ,
.Ql \e%
and postposed
.Ql \e& ,
.Ql \e% ,
.Ql \e/ ,
and
.Ql \ec
escape characters.
Yet, prefixing a command with two zero-width glyphs (after possible
whitespace), as in
.Ql \e&\e& ,
prevents reference lookup for the remaining arguments of the command.
For example, in the hypothetic
.Ql .Ic if\0, elif\0, else\0, endif
all four commands would be linked, but in
.Ql .Ic \e&\e&if\0, elif\0, else\0, endif
none of them; if that is not desired, a new command needs to be started:
.Ql .Ic \e&\e&if\0, \&Ic elif\0, else\0, endif .
.
.Ss Freely definable anchors and references
.
Via the
.Ql Nm Fl ix Ar category Ar key
and
.Ql Nm Fl ix Ar key
usage forms anchors can be defined almost everywhere.
For example,
.Ql Nm Fl ix Ns \0subsubsection """An interesting topic"""
defines the anchor
.Ql "An interesting topic"
for the
.Dq key
.Ql subsubsection .
The form without a specified
.Ar category
will use the builtin name
.Mx -ix ixsx
.Ql ixsx
instead.
.
.Pp
References to such anchors can be made by activating the
.Ic .Sx
search extension via
.Ql Nm Fl sx Ar category
(or
.Ql Nm Fl sx
for the builtin
.Mx -sx
.Ql Sx ixsx
.Ar category )
followed by a normal local reference lookup.
This complication is owed to compatibility of the resulting document.
.
.Bd -literal
\&.Mx -sx subsubsection
\&.Sx "An interesting topic"
.Ed
.
.Ss "Creating table of contents"
.
The final
.Nm
usage form allows creation of a table of contents, which is of special
interest when converting into formats such as HTML, XHTML or PDF.
To restrict the creation of the table of contents to special output
formats, add their names as further arguments to
.Ql Fl toc ;
for convenience all typewriter-like devices can be addressed with
.Ql Ar tty .
.
.Pp
By default only
.Ic .Sh
section headers are a vivid part of the TOC; in order to include
.Ic .Ss
subsections add
.Ql Fl tree .
Note that if
.Ql Fl tree
is used in conjunction with output-format restrictions it will only
affect those output-formats that appear later on the line.
.
.Pp
In the first of the following examples a table of contents will be
generated for PDF and typewriter-like devices.
In the second example a tree of contents will instead be generated for
the output formats PDF and HTML, whereas typewriter-like devices will
see a flat table of contents with only section headers.
.
.Bd -literal
\&.Mx -toc pdf tty
\&.Mx -toc tty -tree html pdf
.Ed
.
.Ss Strings that affect mdocmx
.
Due to deficiencies in some implementations of
.Xr troff 1
strings given on the command line (via
.Ql Fl d Ns )
have to be given an argument to be perceivable on the macro level.
Alternatively the shown numbers can be bitmixed via
.Ev MDOCMX_FLAGS .
.
.Bl -tag -width ".It Dv _docmx-_oc-_merged"
.Mx
.It Dv mx-debug
(2) If defined
.Xr mdocmx 7
macros will offer some verbosity.
In addition not only references will produce visual output, but also
anchors.
.
.Mx
.It Dv mx-anchor-dump
If this is set to a filename then the list of anchors is dumped to it.
.
.Mx
.It Dv mx-disable
(4) Has the same effect as
.Ql Nm Fl disable .
.
.Mx
.It Dv mx-toc-disable
(8) Forcefully turn off any table of contents creation.
.
.Mx
.It Dv mx-toc-emerged
(16) Normally compact display is used for the table of contents, but when
this string is set an emerged display is used for the first level that
lists the headings.
.
.Mx
.It Dv mx-toc-force
(32) Defining this can be used to enforce the creation of a table of
contents as specified, even if the documents
.Ql Fl toc
configuration would not create one for the targeted output device.
A flat table of contents will be generated unless the value is (64)
.Ql tree .
.
.Mx
.It Dv mx-toc-name
If defined its content is used as the headline of the table of contents.
The default is
.Dq TABLE OF CONTENTS .
(Note that if the table of contents has instead been generated by the
.Xr mdocmx 1
preprocessor then the resulting document already includes a definition
of this string to ensure compatibility with, at least,
.Xr mandoc 1 . )
.
.Mx
.It Dv mx-toc-numbered
(128) If defined the first level of the table of contents will be numbered.
.
.Mx
.It Dv mx-xr-url
The output formats HTML, XHTML and PDF require additional information,
a target address, in order to be able to create interactive external
.Ic .Xr
references.
Two modes are supported: one may assign an URL string or the hyphen-minus
.Ql - ,
in which case a macro
.Ql mx-xr-url-create
will be called.
Thanks to
.Xr troff Ns
s late evaluation, the three arguments sequence number, manual section
number, and reference name are available in both cases.
The macro mode is therefore only needed when filtering is necessary, for
example:
.Bd -literal
$ mdocmx mdocmx.7 |
   MDOCMX_FLAGS=64 roff -Tpdf -mdoc \e
    -dmx-xr-url='https://XY.org/man/\e$3.\e$2' \e
    > x.pdf

$ cat filter-example.tr
\&.eo
\&.de mx-xr-url-create
\&. if 'html'\e*[.T]' \e{\e
\&.  ie 'that-manual'\e$3' \e
\&.   URL "https://man.YZ.org/\e$3-\e$2.htm" "[\e$1]"
\&.  el \e
\&.   URL "https://XY.org/man/\e$3.\e$2" "[\e$1]"
\&. \e}
\&..
.ec
.Ed
.El
.
.
.Sh "IMPLEMENTATION NOTES"
.
The
.Nm
request cannot share a line with other macros, neither in the document
prologue nor in its content.
Whereas that is mostly owed to the necessity of ensuring (backward)
compatibility with environments that do not support
.Xr mdocmx 7 ,
it also simplified implementation of the preprocessor.
.
.Pp
Due to the way GNU
.Xr mdoc 7
is implemented, visual references will be placed after their text,
instead of creating the well-known link style (for at least those output
formats for which such style makes sense).
Due to the same reason section headers which contain mdoc or troff
commands alongside their content string are not supported.
All this could be overcome by changing the recursive descendent GNU mdoc
implementation that changes content during its descend, a howto is
thought (commented in mdocmx source).
.
.Ss "Internal extended synopsis"
.
In addition to those usage forms that have been described above the
.Ic .Mx
multiplexer command also understands further flags and arguments which
are of possible interest for formatter and macro implementors.
These further flags and arguments are only generated by the
.Xr mdocmx 1
preprocessor and are solely ment to communicate the preprocessed state
of the document to the actual consumers.
.
.Pp
For one a
.Ql Fl preprocessed
flag is appended to the single
.Ql Fl enable
command in the document prologue.
And then an additional
.Ql Fl anchor-spass
form is introduced, which takes two or three arguments \(en
the macro (name of the command) for which this defines an anchor as well
as its key, possibly followed by a numeric argument that describes the
relationship in between section headings: for
.Ic .Sh
commands it defines a running one-based index count of section headers,
for
.Ic .Ss
commands it instead specifies the index of the section header they
belong to, therefore creating the possibility to generate TOCs.
.
.
.Sh ENVIRONMENT
.
The environment variable
.Mx
.Ev MDOCMX_FLAGS
may be set to a bitmix of the
.Sx "Strings that affect mdocmx" .
So for example
.Ql export MDOCMX_FLAGS=4
disables
.Xr mdocmx 7 ,
whereas
.Ql export MDOCMX_FLAGS=$((64 | 16))
sets
.Dv mx-toc-force
to produce a tree view of the table of contents, and also
.Dv mx-toc-emerged
to make it appear less compact.
.
.
.Sh EXAMPLES
.
A complete, but completely fanciful
.Xr mdoc 7
document that uses the
.Xr mdocmx 7
extension would for example be:
.
.Bd -literal
\&.Dd April 22, 2015
\&.Dt MDOCMX-EXAMPLE 7
\&.Os
\&.Mx -enable tty
\&.
\&.Sh NAME
\&.Nm mdocmx-example
\&.Nd An example for the mdocmx mdoc reference extension
\&.
\&.Mx -toc
\&.
\&.Sh DESCRIPTION
Sors salutis et virtutis michi nunc contraria.
\&.
\&.Bl -tag -width ".It Fn _a_e_i_"
\&.Mx
\&.It Ic .Ar
This will create an anchor for a macro
\&.Ql \e&Ic ,
key
\&.Ql .Ar .
\&.Mx
\&.It Ic .Cm
Anchor for
\&.Ql \e&Ic ,
key
\&.Ql .Cm .
\&.Mx
\&.It Ic .Dv
And an anchor for
\&.Ql \e&Ic ,
key
\&.Ql .Dv .
\&.Mx Ic
\&.Mx Ic "final anchor"
\&.Mx Fn _atexit
\&.It Fn exit
No anchor here.
\&.It Fn at_quick_exit , Fn _atexit
Not for the first, but for the second
\&.Ql \e&Fn
there will be an anchor with the key
\&.Ql _atexit .
\&.It Ic "no anchor here"
\&.It Ic "final anchor"
Pops the pushed
\&.Ql \e&Ic
/
\&.Ql final anchor
macro / key pair.
\&.It Ic ciao
Pops the
\&.Ql \e&Ic
and assigns the key
\&.Ql Ciao .
\&.El
.Ed
.
.
.Sh COMPATIBILITY
.
Using the
.Xr mdocmx 7
extension in
.Xr mdoc 7
manual pages should not cause any compatibility problems in so far as
all tested environments silently ignore the unknown commands by default.
Because of this, and due to the nature of this extension, an
interesting, backward as well as forward compatible approach to use
.Xr mdocmx 7
may be to preprocess manuals with
.Xr mdocmx 1
on developer machines and instead distribute the resulting documents.
.
.
.Sh SEE ALSO
.
.Xr awk 1 ,
.Xr mandoc 1 ,
.Xr mdocmx 1 ,
.Xr sh 1 ,
.Xr troff 1 ,
.Xr mdoc 7
.
.
.Sh HISTORY
.
The
.Nm
environment appeared in 2014.
The terminal output was rewritten to use OSC 8 control sequences in 2022.
.
.
.Sh AUTHORS
.
.An Steffen Nurpmeso Aq Mt steffen@sdaoden.eu .
.
.
.Sh CAVEATS
.
Be aware that the content of the
.Ql Fl width
argument to
.Xr mdoc 7
lists etc. is evaluated as if it were normal document content;
for example, in the following example the
.Ql \&Fn _atexit
will be evaluated and may thus get used by
.Nm :
.
.Pp
.Dl ".Bl -tag -width "".It Fn _atexit"""
.
.\" s-ts-mode
